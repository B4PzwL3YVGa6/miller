
================================================================
GRAMMAR REORG

mlr --from /dev/null put -v #$m=2
= (srec_assignment):
    m (field_name).
    2 (strnum_literal).
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

mlr --from /dev/null put -v #begin{$b=1};$m=2;end{$e=3}
= (srec_assignment):
    b (field_name).
    1 (strnum_literal).
= (srec_assignment):
    m (field_name).
    2 (strnum_literal).
= (srec_assignment):
    e (field_name).
    3 (strnum_literal).
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

mlr --from /dev/null put -v #true{$m=2}
= (srec_assignment):
    m (field_name).
    2 (strnum_literal).
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

mlr --from /dev/null put -v #for(k,v in $*) { }
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

mlr --from /dev/null put -v #for(k,v in $*) { $m=3}
= (srec_assignment):
    m (field_name).
    3 (strnum_literal).
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

mlr --from /dev/null put -v #for(k,v in $*) { true{$m=3} }
= (srec_assignment):
    m (field_name).
    3 (strnum_literal).
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

mlr --from /dev/null put -v #true{ for(k,v in $*) { true{$m=3} } }
= (srec_assignment):
    m (field_name).
    3 (strnum_literal).
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

mlr --from /dev/null put -v #true{ for(k,v in $*) { $m=1;break;continue;;$m=2 } }
= (srec_assignment):
    m (field_name).
    1 (strnum_literal).
= (srec_assignment):
    m (field_name).
    2 (strnum_literal).
AST BEGIN STATEMENTS (0):
AST MAIN STATEMENTS (0):
AST END STATEMENTS (0):

